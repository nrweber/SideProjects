@page "/"

@inject NOAAWeatherService weather


<div class="card">
    <div class="card-header">Current Conditions</div>
    <div class="card-body">
    @if(observation != null)
    {
        <div class="WeatherData">
            <div class="Conditions">
                <img src="@observation.Properties.Icon" />
                <div>@observation.Properties.TextDescription</div>
            </div>
            <div class="Temperature">
                <div class="TempF">@(TempInF())&deg; </div>
                <div class="TempC">@(TempInC())&deg; C</div>
            </div>
        </div>
        <div class="Time">@observation.Properties.Timestamp</div>
    }
    else
    {
        <div>Loading....</div>
    }
  </div>
</div>


<div class="card">
    <div class="card-header">7 Day Forecast</div>
    <div class="card-body">
    @if(forecast != null)
    {
        @foreach(var p in forecast.Properties?.Periods)
        {
            <div>
                @p.Name
            </div>
            <div>
                <img src="@p.Icon" />
            </div>
            <div>
                @p.Temperature
            </div>
            <div>
                @p.ShortForecast
            </div>
        }
    }
    else
    {
        <div>Loading....</div>
    }
    </div>
</div>

@code
{
    Observation observation = null;
    Forecast forecast = null;

    string gridId = "FWD";
    string gridX = "68";
    string gridY = "95";

    protected override async Task OnInitializedAsync()
    {
        observation = await weather.GetObservationForStationAsync("KFWS");
        forecast = await weather.GetForecastForGridXYAsync(gridId, gridX, gridY);
    }

    int TempInF()
    {
        if(observation?.Properties?.Temperature?.Value == null)
        {
            return -500;
        }


        double temp = (double)observation.Properties.Temperature.Value;

        return (int)((temp*1.8)+32);
    }

    int TempInC()
    {
        if(observation?.Properties?.Temperature?.Value == null)
        {
            return -500;
        }


        return (int)observation.Properties.Temperature.Value;
    }
}
